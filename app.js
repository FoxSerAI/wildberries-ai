document.addEventListener("DOMContentLoaded", () => {
  const root = document.getElementById("root");

  const mockProducts = [
    {
      id: 1,
      name: "–ì—Ä–∏–±—ã —Ä–µ–π—à–∏ –æ—Ä–≥–∞–Ω–∏—á–µ—Å–∫–∏–µ",
      views: 3500,
      sales: 89,
      price: 1190,
      stock: 150,
      description: "–û—Ä–≥–∞–Ω–∏—á–µ—Å–∫–∏–µ –≥—Ä–∏–±—ã —Ä–µ–π—à–∏, –≤—ã—Ä–∞—â–µ–Ω–Ω—ã–µ –±–µ–∑ —Ö–∏–º–∏–∫–∞—Ç–æ–≤.",
      keywords: ["–≥—Ä–∏–±—ã —Ä–µ–π—à–∏", "—Å—É—à–µ–Ω—ã–µ –≥—Ä–∏–±—ã", "–∑–¥–æ—Ä–æ–≤—å–µ"],
      active: true
    },
    {
      id: 2,
      name: "–ë–µ–ª—ã–µ —Å—É—à–µ–Ω—ã–µ –≥—Ä–∏–±—ã",
      views: 2200,
      sales: 60,
      price: 990,
      stock: 80,
      description: "–°—É—à–µ–Ω—ã–µ –ª–µ—Å–Ω—ã–µ –±–µ–ª—ã–µ –≥—Ä–∏–±—ã –¥–ª—è —Å—É–ø–æ–≤ –∏ –≤—Ç–æ—Ä—ã—Ö –±–ª—é–¥.",
      keywords: ["–±–µ–ª—ã–µ –≥—Ä–∏–±—ã", "—Å—É—à–µ–Ω—ã–µ –≥—Ä–∏–±—ã", "–¥–ª—è —Å—É–ø–∞"],
      active: false
    }
  ];

  let appState = {
    token: "",
    products: [],
    error: "",
    searchQuery: ""
  };

  function setToken(value) {
    appState.token = value;
    render();
  }

  function setSearchQuery(value) {
    appState.searchQuery = value;
    render();
  }

  function fetchWBProducts() {
    if (!appState.token.trim()) {
      alert("–í–≤–µ–¥–∏—Ç–µ API-—Ç–æ–∫–µ–Ω");
      return;
    }
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å –∫ WB API
    appState.products = mockProducts;
    appState.error = "";
    render();
  }

  function suggestTitle(name) {
    let title = name;
    if (!title.toLowerCase().includes("—Ä–µ–π—à–∏")) title = `–ì—Ä–∏–±—ã —Ä–µ–π—à–∏ ${title}`;
    if (!title.endsWith("—Å—É—à–µ–Ω—ã–µ")) title += " —Å—É—à–µ–Ω—ã–µ";
    return title;
  }

  function AIRecommendations(product) {
    const goodKeywords = ["–≥—Ä–∏–±—ã —Ä–µ–π—à–∏", "—Å—É—à–µ–Ω—ã–µ –≥—Ä–∏–±—ã", "–∑–¥–æ—Ä–æ–≤–æ–µ –ø–∏—Ç–∞–Ω–∏–µ"];
    const missingKeywords = goodKeywords.filter(k => !product.keywords.includes(k));

    return `
      <div style="margin-top: 10px; padding-top: 10px; border-top: 1px solid #ccc;">
        <h4 style="font-weight:bold;">üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:</h4>
        <p style="color: green;">üëâ –£–ª—É—á—à–µ–Ω–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: ${suggestTitle(product.name)}</p>
        ${missingKeywords.length > 0 ? `<p style="color: orange;">üîç –î–æ–±–∞–≤—å—Ç–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞: ${missingKeywords.join(", ")}</p>` : ""}
      </div>
    `;
  }

  function ProductCard(product) {
    return `
      <div style="background:white; padding:1rem; border-radius:8px; box-shadow:0 2px 4px rgba(0,0,0,0.1);">
        <h3 style="font-weight:bold;">${product.name}</h3>
        <p>–ü—Ä–æ—Å–º–æ—Ç—Ä—ã: ${product.views}</p>
        <p>–í—ã–∫—É–ø—ã: ${product.sales}</p>
        <p>–¶–µ–Ω–∞: ${product.price} ‚ÇΩ</p>
        <p>–û—Å—Ç–∞—Ç–∫–∏: ${product.stock}</p>
        ${AIRecommendations(product)}
      </div>
    `;
  }

  function render() {
    const filtered = appState.products.filter(p =>
      p.name.toLowerCase().includes(appState.searchQuery.toLowerCase())
    );

    const productCards = filtered.map(ProductCard).join("");

    const headerHTML = `
      <header style="background:#4F46E5; color:white; padding:1rem; text-align:center;">
        <h1 style="font-size:1.5rem; font-weight:bold;">ü§ñ AI –¥–ª—è Wildberries</h1>
        <p>–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –∫–∞—Ä—Ç–æ—á–µ–∫ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ 24/7</p>
      </header>
    `;

    const authSectionHTML = `
      <section style="padding:1rem; background:white; border-bottom:1px solid #eee;">
        <div style="max-width:600px; margin:auto;">
          <label>üîê –í–≤–µ–¥–∏—Ç–µ –≤–∞—à API-—Ç–æ–∫–µ–Ω:</label><br/>
          <input type="password" value="${appState.token}" onInput="setToken(event.target.value)" placeholder="–í–∞—à —Ç–æ–∫–µ–Ω –æ—Ç Wildberries Seller" style="width:100%; padding:0.5rem;" />
          <button onclick="fetchWBProducts()" style="margin-top:0.5rem; background:#4F46E5; color:white; padding:0.5rem 1rem; border:none; border-radius:4px;">–ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è</button>
        </div>
      </section>
    `;

    const searchSectionHTML = `
      <section style="padding:1rem; background:white;">
        <div style="max-width:600px; margin:auto;">
          <input type="text" value="${appState.searchQuery}" onInput="setSearchQuery(event.target.value)" placeholder="–ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é —Ç–æ–≤–∞—Ä–∞..." style="width:100%; padding:0.5rem;" />
        </div>
      </section>
    `;

    const mainHTML = `
      <main style="padding:1rem; max-width:1000px; margin:auto;">
        <h2 style="font-size:1.5rem; font-weight:bold;">üì¶ –í—Å–µ –≤–∞—à–∏ —Ç–æ–≤–∞—Ä—ã</h2>
        <div style="display: grid; gap: 1rem; grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));">
          ${productCards}
        </div>
      </main>
    `;

    root.innerHTML = headerHTML + authSectionHTML + searchSectionHTML + mainHTML;
  }

  window.setToken = setToken;
  window.fetchWBProducts = fetchWBProducts;
  window.setSearchQuery = setSearchQuery;

  // –°—Ä–∞–∑—É –ø–æ–∫–∞–∂–µ–º –º–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  appState.products = mockProducts;
  render();
});
